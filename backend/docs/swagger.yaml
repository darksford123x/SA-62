basePath: /api/v1
definitions:
  controllers.RepairInvoice:
    properties:
      device:
        type: integer
      rename:
        type: string
      statusR:
        type: integer
      symptom:
        type: integer
    type: object
  ent.Device:
    properties:
      Dname:
        description: Dname holds the value of the "Dname" field.
        type: string
      edges:
        $ref: '#/definitions/ent.DeviceEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the DeviceQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.DeviceEdges:
    properties:
      repairInformation:
        description: RepairInformation holds the value of the repair_information edge.
        items:
          $ref: '#/definitions/ent.RepairInvoice'
        type: array
    type: object
  ent.RepairInvoice:
    properties:
      Rename:
        description: Rename holds the value of the "Rename" field.
        type: string
      edges:
        $ref: '#/definitions/ent.RepairInvoiceEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the RepairInvoiceQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.RepairInvoiceEdges:
    properties:
      device:
        $ref: '#/definitions/ent.Device'
        description: Device holds the value of the device edge.
        type: object
      status:
        $ref: '#/definitions/ent.StatusR'
        description: Status holds the value of the status edge.
        type: object
      symptom:
        $ref: '#/definitions/ent.Symptom'
        description: Symptom holds the value of the symptom edge.
        type: object
    type: object
  ent.StatusR:
    properties:
      Sname:
        description: Sname holds the value of the "Sname" field.
        type: string
      edges:
        $ref: '#/definitions/ent.StatusREdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the StatusRQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.StatusREdges:
    properties:
      repairInformation:
        description: RepairInformation holds the value of the repair_information edge.
        items:
          $ref: '#/definitions/ent.RepairInvoice'
        type: array
    type: object
  ent.Symptom:
    properties:
      Syname:
        description: Syname holds the value of the "Syname" field.
        type: string
      edges:
        $ref: '#/definitions/ent.SymptomEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the SymptomQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.SymptomEdges:
    properties:
      repairInformation:
        description: RepairInformation holds the value of the repair_information edge.
        items:
          $ref: '#/definitions/ent.RepairInvoice'
        type: array
    type: object
  gin.H:
    additionalProperties: true
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for SUT SE 2563
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SUT SA Example API
  version: "1.0"
paths:
  /device/{id}:
    delete:
      description: get device by ID
      operationId: delete-device
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a device entity by ID
  /devices:
    get:
      description: list device entities
      operationId: list-device
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Device'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List device entities
    post:
      consumes:
      - application/json
      description: Create device
      operationId: create-device
      parameters:
      - description: Device entity
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/ent.Device'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Device'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create device
  /devices/{id}:
    get:
      description: get device by ID
      operationId: get-device
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Device'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a device entity by ID
  /repairinvoices:
    get:
      description: list repairInvoice entities
      operationId: list-repairInvoice
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.RepairInvoice'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List repairInvoice entities
    post:
      consumes:
      - application/json
      description: Create repairInvoice
      operationId: create-repairInvoice
      parameters:
      - description: RepairInvoice entity
        in: body
        name: repairInvoice
        required: true
        schema:
          $ref: '#/definitions/controllers.RepairInvoice'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.RepairInvoice'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create repairInvoice
  /repairinvoices/{id}:
    delete:
      description: get repairInvoice by ID
      operationId: delete-repairInvoice
      parameters:
      - description: RepairInvoice ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a repairInvoice entity by ID
  /statusr/{id}:
    delete:
      description: get statusr by ID
      operationId: delete-statusr
      parameters:
      - description: StatusR ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a statusr entity by ID
  /statusrs:
    get:
      description: list statusr entities
      operationId: list-statusr
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.StatusR'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List statusr entities
    post:
      consumes:
      - application/json
      description: Create statusr
      operationId: create-statusr
      parameters:
      - description: StatusR entity
        in: body
        name: statusr
        required: true
        schema:
          $ref: '#/definitions/ent.StatusR'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.StatusR'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create statusr
  /statusrs/{id}:
    get:
      description: get statusr by ID
      operationId: get-statusr
      parameters:
      - description: StatusR ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.StatusR'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a statusr entity by ID
  /symptom/{id}:
    delete:
      description: get symptom by ID
      operationId: delete-symptom
      parameters:
      - description: Symptom ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a symptom entity by ID
  /symptoms:
    get:
      description: list symptom entities
      operationId: list-symptom
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Symptom'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List symptom entities
    post:
      consumes:
      - application/json
      description: Create symptom
      operationId: create-symptom
      parameters:
      - description: Symptom entity
        in: body
        name: symptom
        required: true
        schema:
          $ref: '#/definitions/ent.Symptom'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Symptom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create symptom
  /symptoms/{id}:
    get:
      description: get symptom by ID
      operationId: get-symptom
      parameters:
      - description: Symptom ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Symptom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a symptom entity by ID
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
